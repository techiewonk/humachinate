name: Publish Python üêç distributions üì¶ to PyPI

permissions:
  contents: write # Explicitly grant write permission to GitHub Actions bot

on:
  push:
    branches:
      - main # Trigger on the main branch commits

jobs:
  build-and-publish:
    name: Build and publish Python üêç distributions üì¶ to PyPI
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history to allow version bumping based on tags

      # Setup Python 3.11 (explicit version)
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Install pipenv globally
      - name: Install pipenv globally
        run: |
          python -m pip install --upgrade pipenv wheel build commitizen

      - id: cache-pipenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      # Install dependencies and build module within pipenv
      - name: Install dependencies and build module within pipenv
        run: |
          pipenv install --python 3.11 --dev
          pipenv install wheel
          pipenv install commitizen
          pipenv install build  # Ensure 'build' is installed within pipenv

      # Configure Git user identity before commitizen
      - name: Configure Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Use commitizen to bump the version, handle exit 16 gracefully
      - name: Bump version with commitizen
        run: |
          cz bump --yes || true  # Allow workflow to continue even if changelog fails

      # Push the bumped version and the new tag back to Git
      - name: Push changes to Git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token to push changes
        run: |
          git push --follow-tags

      # Build a binary wheel and a source tarball using the build tool
      - name: Build a binary wheel and a source tarball
        run: |
          pipenv run python -m build

      # Publish distribution üì¶ to PyPI
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
